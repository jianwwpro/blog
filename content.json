[{"title":"maven遇到的坑","date":"2017-03-03T08:31:33.000Z","path":"2017/03/03/maven遇到的坑/","text":"1. 创建项目模板mvn archetype:create -DgroupId=com.mavenweb.test -DartifactId=mavenweb -DarchetypeArtifactId=maven-archetype-webapp maven clean compile mvn eclipse:eclipse 2. lib输出问题12345&lt;classpathentry kind=\"con\" path=\"org.maven.ide.eclipse.MAVEN2_CLASSPATH_CONTAINER\"&gt; &lt;attributes&gt; &lt;attribute name=\"org.eclipse.jst.component.dependency\" value=\"/WEB-INF/lib\"/&gt; &lt;/attributes&gt;&lt;/classpathentry&gt; 3. 查包的冲突1mvn dependency:tree -Dverbose -Dmaven.test.skip=true 排除冲突的包12345678910111213141516&lt;dependency&gt; &lt;groupId&gt;org.unitils&lt;/groupId&gt; &lt;artifactId&gt;unitils-dbmaintainer&lt;/artifactId&gt; &lt;version&gt;$&#123;unitils.version&#125;&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;artifactId&gt;dbunit&lt;/artifactId&gt; &lt;groupId&gt;org.dbunit&lt;/groupId&gt; &lt;/exclusion&gt; &lt;!-- 这个就是我们要加的片断 --&gt; &lt;exclusion&gt; &lt;artifactId&gt;asm&lt;/artifactId&gt; &lt;groupId&gt;asm&lt;/groupId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; 4. 手动安装包1install:install-file -DgroupId=com.google.code.kaptcha -DartifactId=kaptcha -Dversion=2.3.2 -Dfile=/Users/wangjianwu/Documents/WorkSpace/JavaWorkspace/project-caiyun/caiyunboss-platform/bin/kaptcha-2.3.2.jar -Dpackaging=jar -DgeneratePom=true 5. 打包指定配置1mvn package -Dmaven.test.skip=true -P production 1234567891011121314151617181920212223242526&lt;profile&gt; &lt;!-- 生产环境 --&gt; &lt;id&gt;production&lt;/id&gt; &lt;properties&gt; &lt;profiles.active&gt;production&lt;/profiles.active&gt; &lt;/properties&gt; &lt;/profile&gt;&lt;build&gt; &lt;finalName&gt;caiyunboss-webapp&lt;/finalName&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 --&gt; &lt;excludes&gt; &lt;exclude&gt;test/*&lt;/exclude&gt; &lt;exclude&gt;production/*&lt;/exclude&gt; &lt;exclude&gt;development/*&lt;/exclude&gt; &lt;/excludes&gt; &lt;/resource&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources/$&#123;profiles.active&#125;&lt;/directory&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;/build&gt;","tags":[{"name":"maven","slug":"maven","permalink":"http://jianwwpro.github.io/tags/maven/"}]},{"title":"JavaEE开发常用","date":"2017-02-23T03:08:56.000Z","path":"2017/02/23/JavaEE开发常用/","text":"关于mybatis 在使用mysql自增长主键，插入后返回ID问题。1&lt;insert id=&quot;insert&quot; parameterType=&quot;com.caiyun.boss.entity.CaiOrder&quot; useGeneratedKeys=&quot;true&quot; keyProperty=&quot;id&quot;&gt;","tags":[{"name":"Java","slug":"Java","permalink":"http://jianwwpro.github.io/tags/Java/"}]},{"title":"CMYK转RGB","date":"2016-11-25T08:25:31.000Z","path":"2016/11/25/CMYK转RGB/","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798package com.lasun.acms.action;import com.sun.image.codec.jpeg.JPEGCodec;import com.sun.image.codec.jpeg.JPEGImageEncoder;import java.awt.Transparency;import java.awt.color.ColorSpace;import java.awt.image.BufferedImage;import java.awt.image.ColorModel;import java.awt.image.ComponentColorModel;import java.awt.image.DataBuffer;import java.awt.image.DataBufferByte;import java.awt.image.Raster;import java.awt.image.WritableRaster;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.util.Iterator;import javax.imageio.IIOException;import javax.imageio.ImageIO;import javax.imageio.ImageReader;import javax.imageio.stream.ImageInputStream;public class CMYK &#123; public void readImage(String filename) throws IOException &#123; File file = new File(filename); ImageInputStream input = ImageIO.createImageInputStream(file); Iterator readers = ImageIO.getImageReaders(input); if(readers == null || !readers.hasNext()) &#123; throw new RuntimeException(\"1 No ImageReaders found\"); &#125; ImageReader reader = (ImageReader) readers.next(); reader.setInput(input); String format = reader.getFormatName() ; BufferedImage image; if ( \"JPEG\".equalsIgnoreCase(format) ||\"JPG\".equalsIgnoreCase(format) ) &#123; try &#123; // 尝试读取图片 (包括颜色的转换). image = reader.read(0); //RGB &#125; catch (IIOException e) &#123; // 读取Raster (没有颜色的转换). Raster raster = reader.readRaster(0, null);//CMYK image = createJPEG4(raster); &#125; image.getGraphics().drawImage(image, 0, 0, null); String newfilename = filename.substring(0,filename.lastIndexOf(\".\"))+\"_rgb\"+filename.substring(filename.lastIndexOf(\".\")); File newFile = new File(newfilename); FileOutputStream out = new FileOutputStream(newFile); JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(out); encoder.encode(image); out.flush(); out.close(); &#125; &#125; private static BufferedImage createJPEG4(Raster raster) &#123; int w = raster.getWidth(); int h = raster.getHeight(); byte[] rgb = new byte[w * h * 3]; //彩色空间转换 float[] Y = raster.getSamples(0, 0, w, h, 0, (float[]) null); float[] Cb = raster.getSamples(0, 0, w, h, 1, (float[]) null); float[] Cr = raster.getSamples(0, 0, w, h, 2, (float[]) null); float[] K = raster.getSamples(0, 0, w, h, 3, (float[]) null); for (int i = 0, imax = Y.length, base = 0; i &lt; imax; i++, base += 3) &#123; float k = 220 - K[i], y = 255 - Y[i], cb = 255 - Cb[i], cr = 255 - Cr[i]; double val = y + 1.402 * (cr - 128) - k; val = (val - 128) * .65f + 128; rgb[base] = val &lt; 0.0 ? (byte) 0 : val &gt; 255.0 ? (byte) 0xff : (byte) (val + 0.5); val = y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128) - k; val = (val - 128) * .65f + 128; rgb[base + 1] = val &lt; 0.0 ? (byte) 0 : val &gt; 255.0 ? (byte) 0xff : (byte) (val + 0.5); val = y + 1.772 * (cb - 128) - k; val = (val - 128) * .65f + 128; rgb[base + 2] = val &lt; 0.0 ? (byte) 0 : val &gt; 255.0 ? (byte) 0xff : (byte) (val + 0.5); &#125; raster = Raster.createInterleavedRaster(new DataBufferByte(rgb, rgb.length), w, h, w * 3, 3, new int[]&#123;0, 1, 2&#125;, null); ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_sRGB); ColorModel cm = new ComponentColorModel(cs, false, true, Transparency.OPAQUE, DataBuffer.TYPE_BYTE); return new BufferedImage(cm, (WritableRaster) raster, true, null); &#125; public static void main(String[] args) throws IOException &#123; String filename = \"e:/28531383187802097.jpg\"; CMYK cm = new CMYK(); cm.readImage(filename); &#125; &#125;","tags":[{"name":"Java","slug":"Java","permalink":"http://jianwwpro.github.io/tags/Java/"},{"name":"CMYK","slug":"CMYK","permalink":"http://jianwwpro.github.io/tags/CMYK/"},{"name":"图片","slug":"图片","permalink":"http://jianwwpro.github.io/tags/图片/"}]},{"title":"Ionic2学习笔记","date":"2016-09-09T06:21:55.000Z","path":"2016/09/09/Ionic2学习笔记/","text":"1. Action Sheetsrole: descructive、cancel123456789this.actionSheetController.create(&#123; title:'xxx', buttons:[ &#123; text:'', role:'descructive' &#125; ]&#125;) 2. AlertsBasic Alert12345this.alertController.create(&#123; title:'xxx', subTitle:'xxx', buttons:['OK']&#125;) Prompt Alert12345678910111213141516171819let propmt = this.alertController.create(&#123; title: 'Login', message:'', inputs:[ &#123; name:'title', placehodler:'enter title' &#125;, ], buttons:[ &#123; text:'OK', handler:data=&gt;&#123; console.log(data); &#125; &#125; ]&#125;);propmt.present(); Confirmation Alerts类似上面 Radio12345678910111213141516let radioAlert = this.alertController.create();radioAlert.setTitle(\"title\");radioAlert.addInput(&#123; type:'radio', label:'label', value:'value', checked:true&#125;);radioAlert.addButton('cancel');radioAlert.addButton(&#123; text:'OK', handler:data=&gt;&#123; &#125;&#125;);radioAlert.present(); Checkbox与radio alert类似，type为checkbox 4.Badges123456&lt;ion-item&gt; &lt;ion-icon name=\"logo=twitter\" item-left&gt;&lt;/ion-icon&gt; &lt;ion-badge item-right&gt;260k&lt;/ion-badge&gt;&lt;/ion-item&gt;&lt;ion-badge secondary&gt;&lt;/ion-badge&gt; 5. buttons default outline clear round block full button size : small large icon buttons 1234&lt;button&gt; &lt;ion-icon name='home'&gt;&lt;/ion-icon&gt; Left Icon&lt;/button&gt; floating button 1&lt;button fab&gt;FAB&lt;/button&gt; buttons in components 123ion-header&gt;ion-buttons[start]&gt;button&gt;icon-icon[name=&apos;contact&apos;] ion-buttons[end]&gt;button&gt;icon-icon[name=&apos;search&apos;]ion-list&gt;ion-item&gt;button[outline][item-right]&gt;ion-icon[name=&quot;star&quot;] 6. CardsBasic Cards12ion-card&gt;ion-card-header &gt;ion-card-content Card HeadersList In Cards12ion-card&gt;ion-card-header &gt;ion-list&gt;button[ion-item]&gt;ion-icon[name='cart'][item-left]shopping Images In Cards123ion-card&gt;img &gt;ion-card-content&gt;ion-card-title &gt;p","tags":[{"name":"ionic","slug":"ionic","permalink":"http://jianwwpro.github.io/tags/ionic/"},{"name":"ionic2","slug":"ionic2","permalink":"http://jianwwpro.github.io/tags/ionic2/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://jianwwpro.github.io/tags/学习笔记/"}]},{"title":"React0.14发布拆分react和React-dom","date":"2016-09-09T06:21:55.000Z","path":"2016/09/09/React0-14发布拆分react和React-dom/","text":"React 从0.14 开始有一些重要的改进，主要是简化代码编写，提供更好的支持环境，比如 React Native。原本的 API 在 v0.14 版中仍然可以使用，只不过会有 警告，在 v0.15 版的时候完全移除。 Reactjs 0.14 获取： ReactDev build with warnings: https://fb.me/react-0.14.0.jsMinified build for production: https://fb.me/react-0.14.0.min.js React with Add-OnsDev build with warnings: https://fb.me/react-with-addons-0.14.0.jsMinified build for production: https://fb.me/react-with-addons-0.14.0.min.js React DOM (include React in the page before React DOM)Dev build with warnings: https://fb.me/react-dom-0.14.0.jsMinified build for production: https://fb.me/react-dom-0.14.0.min.js React 分成两个包原本的 package``` 被拆分为 ```react``` 及 ```react-dom``` 两个 package。 12#### react包 createElementcreateClassComponentPropTypesChildren123456#### react-dom包 ```renderunmountComponentAtNodefindDOMNodeserver/renderToStringserver/renderToStaticMarkup 组件写法12345678910111213import React,&#123;Component&#125; from &apos;react&apos;import &#123;render&#125; from &apos;react-dom&apos;class HelloWorld extends Component&#123; render()&#123; return ( &lt;div&gt;hello world&lt;/div&gt; ) &#125;&#125;render( &lt;HelloWorld /&gt;) React.addons 下工具也变成独立包1234567891011react-addons-clone-with-propsreact-addons-create-fragmentreact-addons-css-transition-groupreact-addons-linked-state-mixinreact-addons-perfreact-addons-pure-render-mixinreact-addons-shallow-comparereact-addons-test-utilsreact-addons-transition-groupreact-addons-updateReactDOM.unstable_batchedUpdates （在 react-dom 中） refs 变成了真正的 DOM 节点 当我们需要获取 React 组件上某个 DOM 节点时，React 提供了 refs 方法方便我们快速引用。为了方便我们使用，React 还「贴心」地对 refs 做了一层封装，使用 this.refs.xxx.getDOMNode() 或 React.findDOMNode(this.refs.xxx) 可以获取到真正的 DOM 节点。 结果发现大家真正需要的就是 DOM 节点本身，封装了半天完全是浪费感情。 于是在 v0.14 版中 refs 指向的就是 DOM 节点，同时也会保留 .getDOMNode() 方法（带 warning），最终在 v0.15 版中去除该方法。 var Zoo = React.createClass({ render: function() { return Giraffe name: ; }, showName: function() { // 之前： // var input = this.refs.giraffe.getDOMNode(); // // v0.14 版： var input = this.refs.giraffe; alert(input.value); }});需要注意的是，如果你给自定义的 React 组件（除了 DOM 自带的标签，如 div、p 等）添加 refs，表现和行为与之前一致。 无状态的函数式组件 其实在实际业务系统中使用 React 时，我们会写很多只有 render 方法的 React 组件。为了减少冗余的代码量，React v0.14 中引入了 无状态的函数式组件（Stateless functional components） 的概念。先看看长啥样： // 一个 ES6 箭头函数定义的无状态函数式组件var Aquarium = (props) =&gt; { var fish = getFish(props.species); return {fish};};// 或者更加简化的版本var Aquarium = ({species}) =&gt; ( {getFish(species)} );// 最终使用方式: 可以看到，没有 React.createClass，也没有显式的 render，写起来更加轻松了。 当然，新语法也有需要注意的地方： 没有任何生命周期方法，如 componentDidMount 等不能添加 refs可以通过给函数添加属性定义 propTypes 和 defaultPropsreact-tools 及 JSXTransformer.js 已弃用 拥抱 Babel 吧同学们！ 编译器优化 在 Babel 5.8.23 及更新的版本中，新增了两项专门针对 React 的优化配置，仅推荐在生产环境中开启，因为优化后会导致代码的报错更加扑朔迷离（本来报错就已经很难定位了……）。 optimisation.react.inlineElements 将 JSX 元素转换为对象而非使用 React.createElementoptimisation.react.constantElements 针对拥有完全静态子树的组件，将其创建过程提升到顶层（Top level），从而减少对 React.createElement 方法的调用其它变化 React.initializeTouchEvents 已弃用由于 refs 的相关变化（见上文），TestUtils.findAllInRenderedTree 及相关的方法不再接受 DOM 组件作为参数，只能传入自定义的 React 组件props 一旦创建永远不可修改，因此 .setProps 及 .replaceProps 已废弃children 不可以传对象类型，推荐传入数组，或使用 React.createFragment 方法（其实就是转换为了数组）React.addons.classSet 已经移除，使用 classnames package 替代将要发生的改变 在 v0.15 版中，下列内容将会发生改变： this.getDOMNode() 方法将会废弃，推荐使用 React.findDOMNode()setProps 及 replaceProps 将会废弃React.addons.cloneWithProps 已废弃，推荐使用 React.cloneElements，新方法不会自动 merge className 及 styleReact.addons.CSSTransitionGroup 将不再监听 transition 事件，因此使用者需要显式指定动画的 timeout，如：transitionEnterTimeout={500}。ES6 组件类必须 extends React.Component（如果使用 React.createClass 语法则不受影响）在多次 render 中重用并改变 style 对象已经被弃用（这一点不是太明白，中心思想貌似是不要 mutate object？）","tags":[{"name":"react","slug":"react","permalink":"http://jianwwpro.github.io/tags/react/"},{"name":"前端","slug":"前端","permalink":"http://jianwwpro.github.io/tags/前端/"}]},{"title":"Redux学习笔记","date":"2016-09-09T06:21:55.000Z","path":"2016/09/09/Redux学习笔记/","text":"单一数据源1234567891011121314151617181920212223242526272829303132333435363738394041import &#123; createStore &#125; from 'redux';/** * 这是一个 reducer，形式为 (state, action) =&gt; state 的纯函数。 * 描述了 action 如何把 state 转变成下一个 state。 * * state 的形式取决于你，可以是基本类型、数组、对象、 * 甚至是 Immutable.js 生成的数据结构。惟一的要点是 * 当 state 变化时需要返回全新的对象，而不是修改传入的参数。 * * 下面例子使用 `switch` 语句和字符串来做判断，但你可以写帮助类(helper) * 根据不同的约定（如方法映射）来判断，只要适用你的项目即可。 */function counter(state = 0, action) &#123; switch (action.type) &#123; case 'INCREMENT': return state + 1; case 'DECREMENT': return state - 1; default: return state; &#125;&#125;// 创建 Redux store 来存放应用的状态。// API 是 &#123; subscribe, dispatch, getState &#125;。let store = createStore(counter);// 可以手动订阅更新，也可以事件绑定到视图层。store.subscribe(() =&gt; console.log(store.getState()));// 改变内部 state 惟一方法是 dispatch 一个 action。// action 可以被序列化，用日记记录和储存下来，后期还可以以回放的方式执行store.dispatch(&#123; type: 'INCREMENT' &#125;);// 1store.dispatch(&#123; type: 'INCREMENT' &#125;);// 2store.dispatch(&#123; type: 'DECREMENT' &#125;);// 1 入口1. 产出storeredux.createStore 进行创建store，参数是reducers 2. 产出 reducereducers 输出 redux.combineReducers({各种switch case方法,…})每一次状态改变都会影响reducers的输出 3. 将store 输入到react-redux1234import &#123; Provivder &#125; from 'react-redux'&lt;Provider sotre=&#123;store&#125;&gt; &lt;App/&gt;&lt;/Provider&gt; 4. 在app中调用action1. 使用connect，注入props1234567891011render()&#123; const &#123;dispatch,visibleTodos,visiblibityFilter&#125; = this.props//通过react-redux.connect注入&#125;function select(state)&#123; return &#123;//对象里面的数据将注入props里，可直接使用this.props调用 visibleTodos: selectTodos(state.todos,state.visibilityFilter),//传入所有列表，筛选出想要的 visibilityFilter: state.visibilityFIlter &#125;&#125;export default connect(select)(App) 2. 调用dispatch或则使用props 方式1：注入后的dispatch到action去，aciton返回的状态就回被reduce监控执行 方式2：可从this.props中获取注入的对象","tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://jianwwpro.github.io/tags/学习笔记/"},{"name":"Redux","slug":"Redux","permalink":"http://jianwwpro.github.io/tags/Redux/"}]},{"title":"Linux环境的一些脚本命令","date":"2016-09-09T06:15:14.000Z","path":"2016/09/09/Linux环境的一些脚本命令/","text":"挂在共享12mount -t smbfs //wangjianwu:artron@192.168.82.13/anbo/ /Users/jsb/Documents/WorkSpace/data/mount -t smbfs //wangjianwu:jianwu@192.168.82.100/artbase/artbase/artbase-jiami /Users/jsb/Documents/WorkSpace/projects/artbase/","tags":[{"name":"Linux","slug":"Linux","permalink":"http://jianwwpro.github.io/tags/Linux/"},{"name":"环境","slug":"环境","permalink":"http://jianwwpro.github.io/tags/环境/"}]},{"title":"灾难悼念整站灰色","date":"2016-09-08T08:00:20.000Z","path":"2016/09/08/灾难悼念整站灰色/","text":"当遇到国际/国家灾难时，网站需要整体灰色。使用滤镜，可以在chrome、IE7/8/9/10还可以使用filter处理，但是在IE11就不支持，所以需要外加js来做。 1234567891011body *&#123; -webkit-filter: saturate(0); -webkit-filter: grayscale(100%); /* webkit */ -moz-filter: grayscale(100%); /*firefox*/ -ms-filter: grayscale(100%); /*ie9*/ -o-filter: grayscale(100%); /*opera*/ filter: grayscale(100%); filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale=1); filter:gray; /*ie9- */&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323/* * -- grayscale.js -- * Copyright (C) James Padolsey (http://james.padolsey.com) * Download by http://www.codefans.net */var grayscale = (function()&#123; var config = &#123; colorProps: ['color','backgroundColor','borderBottomColor','borderTopColor','borderLeftColor','borderRightColor','backgroundImage'], externalImageHandler : &#123; /* Grayscaling externally hosted images does not work - Use these functions to handle those images as you so desire */ /* Out of convenience these functions are also used for browsers like Chrome that do not support CanvasContext.getImageData */ init : function(el, src) &#123; if (el.nodeName.toLowerCase() === 'img') &#123; // Is IMG element... &#125; else &#123; // Is background-image element: // Default - remove background images data(el).backgroundImageSRC = src; el.style.backgroundImage = ''; &#125; &#125;, reset : function(el) &#123; if (el.nodeName.toLowerCase() === 'img') &#123; // Is IMG element... &#125; else &#123; // Is background-image element: el.style.backgroundImage = 'url(' + (data(el).backgroundImageSRC || '') + ')'; &#125; &#125; &#125; &#125;, log = function()&#123; try &#123; window.console.log.apply(console, arguments); &#125; catch(e) &#123;&#125;; &#125;, isExternal = function(url) &#123; // Checks whether URL is external: 'CanvasContext.getImageData' // only works if the image is on the current domain. return (new RegExp('https?://(?!' + window.location.hostname + ')')).test(url); &#125;, data = (function()&#123; var cache = [0], expando = 'data' + (+new Date()); return function(elem) &#123; var cacheIndex = elem[expando], nextCacheIndex = cache.length; if(!cacheIndex) &#123; cacheIndex = elem[expando] = nextCacheIndex; cache[cacheIndex] = &#123;&#125;; &#125; return cache[cacheIndex]; &#125;; &#125;)(), desatIMG = function(img, prepare, realEl) &#123; // realEl is only set when img is temp (for BG images) var canvas = document.createElement('canvas'), context = canvas.getContext('2d'), height = img.naturalHeight || img.offsetHeight || img.height, width = img.naturalWidth || img.offsetWidth || img.width, imgData; canvas.height = height; canvas.width = width; context.drawImage(img, 0, 0); try &#123; imgData = context.getImageData(0, 0, width, height); &#125; catch(e) &#123;&#125; if (prepare) &#123; desatIMG.preparing = true; // Slowly recurse through pixels for prep, // :: only occurs on grayscale.prepare() var y = 0; (function()&#123; if (!desatIMG.preparing) &#123; return; &#125; if (y === height) &#123; // Finished! context.putImageData(imgData, 0, 0, 0, 0, width, height); realEl ? (data(realEl).BGdataURL = canvas.toDataURL()) : (data(img).dataURL = canvas.toDataURL()) &#125; for (var x = 0; x &lt; width; x++) &#123; var i = (y * width + x) * 4; // Apply Monoschrome level across all channels: imgData.data[i] = imgData.data[i+1] = imgData.data[i+2] = RGBtoGRAYSCALE(imgData.data[i], imgData.data[i+1], imgData.data[i+2]); &#125; y++; setTimeout(arguments.callee, 0); &#125;)(); return; &#125; else &#123; // If desatIMG was called without 'prepare' flag // then cancel recursion and proceed with force! (below) desatIMG.preparing = false; &#125; for (var y = 0; y &lt; height; y++) &#123; for (var x = 0; x &lt; width; x++) &#123; var i = (y * width + x) * 4; // Apply Monoschrome level across all channels: imgData.data[i] = imgData.data[i+1] = imgData.data[i+2] = RGBtoGRAYSCALE(imgData.data[i], imgData.data[i+1], imgData.data[i+2]); &#125; &#125; context.putImageData(imgData, 0, 0, 0, 0, width, height); return canvas; &#125;, getStyle = function(el, prop) &#123; var style = document.defaultView &amp;&amp; document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle(el, null)[prop] : el.currentStyle[prop]; // If format is #FFFFFF: (convert to RGB) if (style &amp;&amp; /^#[A-F0-9]/i.test(style)) &#123; var hex = style.match(/[A-F0-9]&#123;2&#125;/ig); style = 'rgb(' + parseInt(hex[0], 16) + ',' + parseInt(hex[1], 16) + ',' + parseInt(hex[2], 16) + ')'; &#125; return style; &#125;, RGBtoGRAYSCALE = function(r,g,b) &#123; // Returns single monochrome figure: return parseInt( (0.2125 * r) + (0.7154 * g) + (0.0721 * b), 10 ); &#125;, getAllNodes = function(context) &#123; var all = Array.prototype.slice.call(context.getElementsByTagName('*')); all.unshift(context); return all; &#125;; var init = function(context) &#123; // Handle if a DOM collection is passed instead of a single el: if (context &amp;&amp; context[0] &amp;&amp; context.length &amp;&amp; context[0].nodeName) &#123; // Is a DOM collection: var allContexts = Array.prototype.slice.call(context), cIndex = -1, cLen = allContexts.length; while (++cIndex&lt;cLen) &#123; init.call(this, allContexts[cIndex]); &#125; return; &#125; context = context || document.documentElement; if (!document.createElement('canvas').getContext) &#123; context.style.filter = 'progid:DXImageTransform.Microsoft.BasicImage(grayscale=1)'; context.style.zoom = 1; return; &#125; var all = getAllNodes(context), i = -1, len = all.length; while (++i&lt;len) &#123; var cur = all[i]; if (cur.nodeName.toLowerCase() === 'img') &#123; var src = cur.getAttribute('src'); if(!src) &#123; continue; &#125; if (isExternal(src)) &#123; config.externalImageHandler.init(cur, src); &#125; else &#123; data(cur).realSRC = src; try &#123; // Within try statement just encase there's no support.... cur.src = data(cur).dataURL || desatIMG(cur).toDataURL(); &#125; catch(e) &#123; config.externalImageHandler.init(cur, src); &#125; &#125; &#125; else &#123; for (var pIndex = 0, pLen = config.colorProps.length; pIndex &lt; pLen; pIndex++) &#123; var prop = config.colorProps[pIndex], style = getStyle(cur, prop); if (!style) &#123;continue;&#125; if (cur.style[prop]) &#123; data(cur)[prop] = style; &#125; // RGB color: if (style.substring(0,4) === 'rgb(') &#123; var monoRGB = RGBtoGRAYSCALE.apply(null, style.match(/\\d+/g)); cur.style[prop] = style = 'rgb(' + monoRGB + ',' + monoRGB + ',' + monoRGB + ')'; continue; &#125; // Background Image: if (style.indexOf('url(') &gt; -1) &#123; var urlPatt = /\\(['\"]?(.+?)['\"]?\\)/, url = style.match(urlPatt)[1]; if (isExternal(url)) &#123; config.externalImageHandler.init(cur, url); data(cur).externalBG = true; continue; &#125; // data(cur).BGdataURL refers to caches URL (from preparation) try &#123; var imgSRC = data(cur).BGdataURL || (function()&#123; var temp = document.createElement('img'); temp.src = url; return desatIMG(temp).toDataURL(); &#125;)(); cur.style[prop] = style.replace(urlPatt, function(_, url)&#123; return '(' + imgSRC + ')'; &#125;); &#125; catch(e) &#123; config.externalImageHandler.init(cur, url); &#125; &#125; &#125; &#125; &#125; &#125;; init.reset = function(context) &#123; // Handle if a DOM collection is passed instead of a single el: if (context &amp;&amp; context[0] &amp;&amp; context.length &amp;&amp; context[0].nodeName) &#123; // Is a DOM collection: var allContexts = Array.prototype.slice.call(context), cIndex = -1, cLen = allContexts.length; while (++cIndex&lt;cLen) &#123; init.reset.call(this, allContexts[cIndex]); &#125; return; &#125; context = context || document.documentElement; if (!document.createElement('canvas').getContext) &#123; context.style.filter = 'progid:DXImageTransform.Microsoft.BasicImage(grayscale=0)'; return; &#125; var all = getAllNodes(context), i = -1, len = all.length; while (++i&lt;len) &#123; var cur = all[i]; if (cur.nodeName.toLowerCase() === 'img') &#123; var src = cur.getAttribute('src'); if (isExternal(src)) &#123; config.externalImageHandler.reset(cur, src); &#125; cur.src = data(cur).realSRC || src; &#125; else &#123; for (var pIndex = 0, pLen = config.colorProps.length; pIndex &lt; pLen; pIndex++) &#123; if (data(cur).externalBG) &#123; config.externalImageHandler.reset(cur); &#125; var prop = config.colorProps[pIndex]; cur.style[prop] = data(cur)[prop] || ''; &#125; &#125; &#125; &#125;; init.prepare = function(context) &#123; // Handle if a DOM collection is passed instead of a single el: if (context &amp;&amp; context[0] &amp;&amp; context.length &amp;&amp; context[0].nodeName) &#123; // Is a DOM collection: var allContexts = Array.prototype.slice.call(context), cIndex = -1, cLen = allContexts.length; while (++cIndex&lt;cLen) &#123; init.prepare.call(null, allContexts[cIndex]); &#125; return; &#125; // Slowly recurses through all elements // so as not to lock up on the user. context = context || document.documentElement; if (!document.createElement('canvas').getContext) &#123; return; &#125; var all = getAllNodes(context), i = -1, len = all.length; while (++i&lt;len) &#123; var cur = all[i]; if (data(cur).skip) &#123; return; &#125; if (cur.nodeName.toLowerCase() === 'img') &#123; if (cur.getAttribute('src') &amp;&amp; !isExternal(cur.src)) &#123; desatIMG(cur, true); &#125; &#125; else &#123; var style = getStyle(cur, 'backgroundImage'); if (style.indexOf('url(') &gt; -1) &#123; var urlPatt = /\\(['\"]?(.+?)['\"]?\\)/, url = style.match(urlPatt)[1]; if (!isExternal(url)) &#123; var temp = document.createElement('img'); temp.src = url; desatIMG(temp, true, cur); &#125; &#125; &#125; &#125; &#125;; return init;&#125;)();//然后调用 changeColor()即可生效 function changeColor()&#123; var navStr = navigator.userAgent.toLowerCase(); function isIe()&#123; return (\"ActiveXObject\" in window); &#125; var isIE1011=(navStr.indexOf(\"msie 10.0\")!==-1)||(navStr.indexOf(\"rv:11.0\")!==-1); if(isIE1011)&#123; // 判断是IE10或者IE11 grayscale(document.body); &#125; &#125;","tags":[{"name":"前端","slug":"前端","permalink":"http://jianwwpro.github.io/tags/前端/"},{"name":"CSS","slug":"CSS","permalink":"http://jianwwpro.github.io/tags/CSS/"}]},{"title":"nginx用法记录","date":"2016-09-07T01:26:50.000Z","path":"2016/09/07/nginx用法记录/","text":"uri匹配和if判断123456789101112131415161718server&#123; listen 91; location /mm&#123; proxy_pass http://localhost:7070; client_max_body_size 1000m; &#125; location ~* ^/resize &#123; if ( $uri ~* &quot;^/resize_(\\d+)x(\\d+)/(.*)&quot; ) &#123; set $image_path $3; proxy_pass http://127.0.0.1:91/$image_path; &#125; &#125; location /mm/userfiles &#123; root e:/mm/jsite/data; error_page 405 =200 @405; &#125;&#125; nginx加水印和切图存储 nginx自带http_image_filter_module，但是加水印的工作需要从githu上面下载模块替换原来自带模块编译安装。https://github.com/intaro/nginx-image-filter-watermark 编译: 1--with-http_image_filter_module --with-http_stub_status_module --with-http_ssl_module --add-module=/application/nginx-rtmp-module --add-module=/root/Downloads/ngx_devel_kit-0.2.18/ --add-module=/root/Downloads/lua-nginx-module-0.8.6/ --add-module=/root/Downloads/echo-nginx-module-0.59rc1 --with-pcre=../pcre-8.30 --add-module=../set-misc-nginx-module-0.30/ 配置 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859server &#123; listen 82; server_name localhost; server_name ah.tunnel.qydev.com; location /mm&#123; proxy_pass http://localhost:7070; client_max_body_size 1000m; &#125; location /mm/static/f &#123; root /application/tomcat_mm/webapps; &#125;location ~* ^/resize &#123; ##### author : wangjianwu root /data/site_cache; set $width 150; set $height 100; set $dimens &quot;&quot;; if ($uri ~* &quot;^/resize_(\\d+)x(\\d+)/(.*)&quot; ) &#123; set $width $1; set $height $2; set $image_path $3; set $demins &quot;_$1x$2&quot;; &#125; if ($uri ~* &quot;^/resize/(.*)&quot; ) &#123; set $image_path $1; &#125; set $image_uri image_resize/$image_path?width=$width&amp;height=$height; if (!-f $request_filename) &#123; proxy_pass http://127.0.0.1:82/$image_uri; break; &#125; proxy_store /data/site_cache/resize$demins/$image_path; proxy_store_access user:rw group:rw all:r; proxy_set_header Host $host; expires 30d; access_log off; &#125; location /mm/userfiles &#123; root /data/jsite/data; error_page 405 =200 @405; &#125; location /image_resize &#123; alias /data/jsite/data; image_filter watermark; image_filter_watermark &quot;/data/jsite/1.png&quot;; image_filter_watermark_position bottom-right; image_filter resize $arg_width $arg_height; image_filter_jpeg_quality 95; image_filter_watermark_width_from 200; image_filter_watermark_height_from 200;image_filter_buffer 20M; access_log off; &#125;&#125;","tags":[{"name":"nginx","slug":"nginx","permalink":"http://jianwwpro.github.io/tags/nginx/"}]},{"title":"博客开通","date":"2016-08-04T00:30:02.000Z","path":"2016/08/04/博客开通/","text":"成长需要记录，需要沉淀。我的云笔记里已经放了各种分类的学习笔记、生活记录，但是我想将我自己能分享出来的记录都分享出来，为我们大家的搜索引擎贡献一点点的力量。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://jianwwpro.github.io/tags/随笔/"}]}]